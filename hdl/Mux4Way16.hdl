// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel = 00
 *       b if sel = 01
 *       c if sel = 10
 *       d if sel = 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];
    
    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=outAB0Sel0);
    Mux(a=a[1], b=b[1], sel=sel[0], out=outAB1Sel0);
    Mux(a=a[2], b=b[2], sel=sel[0], out=outAB2Sel0);
    Mux(a=a[3], b=b[3], sel=sel[0], out=outAB3Sel0);
    Mux(a=a[4], b=b[4], sel=sel[0], out=outAB4Sel0);
    Mux(a=a[5], b=b[5], sel=sel[0], out=outAB5Sel0);
    Mux(a=a[6], b=b[6], sel=sel[0], out=outAB6Sel0);
    Mux(a=a[7], b=b[7], sel=sel[0], out=outAB7Sel0);
    Mux(a=a[8], b=b[8], sel=sel[0], out=outAB8Sel0);
    Mux(a=a[9], b=b[9], sel=sel[0], out=outAB9Sel0);
    Mux(a=a[10], b=b[10], sel=sel[0], out=outAB10Sel0);
    Mux(a=a[11], b=b[11], sel=sel[0], out=outAB11Sel0);
    Mux(a=a[12], b=b[12], sel=sel[0], out=outAB12Sel0);
    Mux(a=a[13], b=b[13], sel=sel[0], out=outAB13Sel0);
    Mux(a=a[14], b=b[14], sel=sel[0], out=outAB14Sel0);
    Mux(a=a[15], b=b[15], sel=sel[0], out=outAB15Sel0);

    Mux(a=c[0], b=d[0], sel=sel[0], out=outCD0Sel1);
    Mux(a=c[1], b=d[1], sel=sel[0], out=outCD1Sel1);
    Mux(a=c[2], b=d[2], sel=sel[0], out=outCD2Sel1);
    Mux(a=c[3], b=d[3], sel=sel[0], out=outCD3Sel1);
    Mux(a=c[4], b=d[4], sel=sel[0], out=outCD4Sel1);
    Mux(a=c[5], b=d[5], sel=sel[0], out=outCD5Sel1);
    Mux(a=c[6], b=d[6], sel=sel[0], out=outCD6Sel1);
    Mux(a=c[7], b=d[7], sel=sel[0], out=outCD7Sel1);
    Mux(a=c[8], b=d[8], sel=sel[0], out=outCD8Sel1);
    Mux(a=c[9], b=d[9], sel=sel[0], out=outCD9Sel1);
    Mux(a=c[10], b=d[10], sel=sel[0], out=outCD10Sel1);
    Mux(a=c[11], b=d[11], sel=sel[0], out=outCD11Sel1);
    Mux(a=c[12], b=d[12], sel=sel[0], out=outCD12Sel1);
    Mux(a=c[13], b=d[13], sel=sel[0], out=outCD13Sel1);
    Mux(a=c[14], b=d[14], sel=sel[0], out=outCD14Sel1);
    Mux(a=c[15], b=d[15], sel=sel[0], out=outCD15Sel1);
    
    Mux(a=outAB0Sel0, b=outCD0Sel1, sel=sel[1], out=out[0]);
    Mux(a=outAB1Sel0, b=outCD1Sel1, sel=sel[1], out=out[1]);
    Mux(a=outAB2Sel0, b=outCD2Sel1, sel=sel[1], out=out[2]);
    Mux(a=outAB3Sel0, b=outCD3Sel1, sel=sel[1], out=out[3]);
    Mux(a=outAB4Sel0, b=outCD4Sel1, sel=sel[1], out=out[4]);
    Mux(a=outAB5Sel0, b=outCD5Sel1, sel=sel[1], out=out[5]);
    Mux(a=outAB6Sel0, b=outCD6Sel1, sel=sel[1], out=out[6]);
    Mux(a=outAB7Sel0, b=outCD7Sel1, sel=sel[1], out=out[7]);
    Mux(a=outAB8Sel0, b=outCD8Sel1, sel=sel[1], out=out[8]);
    Mux(a=outAB9Sel0, b=outCD9Sel1, sel=sel[1], out=out[9]);
    Mux(a=outAB10Sel0, b=outCD10Sel1, sel=sel[1], out=out[10]);
    Mux(a=outAB11Sel0, b=outCD11Sel1, sel=sel[1], out=out[11]);
    Mux(a=outAB12Sel0, b=outCD12Sel1, sel=sel[1], out=out[12]);
    Mux(a=outAB13Sel0, b=outCD13Sel1, sel=sel[1], out=out[13]);
    Mux(a=outAB14Sel0, b=outCD14Sel1, sel=sel[1], out=out[14]);
    Mux(a=outAB15Sel0, b=outCD15Sel1, sel=sel[1], out=out[15]);
}